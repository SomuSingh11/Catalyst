generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(uuid()) // Use this for relationships
  userId    String         @unique // Keep this for Clerk auth only
  name      String
  username  String         @unique
  imageUrl  String
  email     String
  createAt  DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  quizzy    Quizzy[]
  progress  UserProgress[]
}

model leetcodeQuestion {
  id               Int            @id @default(autoincrement())
  name             String
  questionId       Int            @unique
  difficulty       String
  tags             String
  companyTags      String
  questionURL      String
  listTags         String
  questionSlug     String
  similarQuestions String
  leetCodePatterns String
  userProgress     UserProgress[]
}

model UserProgress {
  id         String           @id @default(uuid())
  userId     String
  questionId Int
  finished   Boolean          @default(false)
  category   String
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  question   leetcodeQuestion @relation(fields: [questionId], references: [id])
  user       User             @relation(fields: [userId], references: [id])

  @@unique([userId, questionId])
}

model Quizzy {
  id              String           @id @default(uuid())
  userId          String
  gameType        GameType
  topic           String
  timeStarted     DateTime
  timeEnded       DateTime?
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  quizzyQuestions QuizzyQuestion[]

  @@index([userId], map: "userId")
}

model QuizzyQuestion {
  id                String   @id @default(uuid())
  quizzyId          String
  question          String
  answer            String
  options           Json?
  percentageCorrect Float?
  questionType      GameType
  userAnswer        String?
  isCorrect         Boolean?
  quizzy            Quizzy   @relation(fields: [quizzyId], references: [id], onDelete: Cascade)

  @@index([quizzyId], map: "quizzyId")
}

enum GameType {
  mcq
  open_ended
}
